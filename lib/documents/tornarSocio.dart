import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class TornarSocioScreen extends StatefulWidget {
  const TornarSocioScreen({super.key});

  @override
  _TornarSocioScreenState createState() => _TornarSocioScreenState();
}

class _TornarSocioScreenState extends State<TornarSocioScreen> {
  final _formKey = GlobalKey<FormState>();
  bool aceitaRegras = false;

  // Controladores dos campos de texto
  final TextEditingController nomeController = TextEditingController();
  final TextEditingController moradaController = TextEditingController();
  final TextEditingController codigoPostalController = TextEditingController();
  final TextEditingController localidadeController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController telemovelController = TextEditingController();
  final TextEditingController nifController = TextEditingController();

  // Dropdown de tipo de quota
  List<String> quotas = ["5‚Ç¨/m√™s", "10‚Ç¨/m√™s", "15‚Ç¨/m√™s", "Outro"];
  String selectedQuota = "5‚Ç¨/m√™s";

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () => Navigator.pop(context),
        ),
        title: Text("Tornar-se S√≥cio üè°"),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text("üìå Dados Pessoais", style: _titleStyle()),
              _buildTextField("Nome Completo", nomeController),
              _buildTextField("Morada", moradaController),
              _buildTextField("C√≥digo Postal", codigoPostalController),
              _buildTextField("Localidade", localidadeController),
              _buildTextField("E-mail", emailController),
              _buildTextField("Telem√≥vel", telemovelController),
              _buildTextField("NIF", nifController),
              SizedBox(height: 20),

              Text("üí∞ Escolha o Tipo de Quota", style: _titleStyle()),
              _buildDropdownQuota(),
              SizedBox(height: 20),

              CheckboxListTile(
                title: Text("Aceito os termos e condi√ß√µes"),
                value: aceitaRegras,
                onChanged: (bool? value) {
                  setState(() {
                    aceitaRegras = value ?? false;
                  });
                },
              ),
              SizedBox(height: 20),

              Center(
                child: ElevatedButton(
                  onPressed: () async {
                    if (_formKey.currentState!.validate() && aceitaRegras) {
                      await _submeterFormulario(); // Salva no Firestore
                      _mostrarPopupConfirmacao(); // Mostra o popup ap√≥s salvar
                    }
                  },
                  child: Text("Submeter Inscri√ß√£o ‚úÖ"),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  /// Fun√ß√£o para capturar dados dos campos de texto
  Widget _buildTextField(String label, TextEditingController controller) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: TextFormField(
        controller: controller,
        decoration: InputDecoration(
          labelText: label,
          border: OutlineInputBorder(),
        ),
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Por favor, preencha este campo';
          }
          return null;
        },
      ),
    );
  }

  /// Dropdown de tipo de quota
  Widget _buildDropdownQuota() {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8.0),
      child: DropdownButtonFormField<String>(
        decoration: InputDecoration(border: OutlineInputBorder()),
        value: selectedQuota,
        items: quotas.map((String value) {
          return DropdownMenuItem<String>(
            value: value,
            child: Text(value),
          );
        }).toList(),
        onChanged: (String? newValue) {
          setState(() {
            selectedQuota = newValue!;
          });
        },
      ),
    );
  }

  /// Fun√ß√£o para salvar no Firebase Firestore
  Future<void> _submeterFormulario() async {
    try {
      // Obt√©m o ID do utilizador autenticado
      String uidAssociacao = FirebaseAuth.instance.currentUser?.uid ?? "desconhecido";

      // Refer√™ncia ao Firestore
      FirebaseFirestore firestore = FirebaseFirestore.instance;

      // Criar um novo pedido na subcole√ß√£o "socio"
      await firestore
          .collection("pedidoENotificacoes") // üìÇ Cole√ß√£o principal
          .doc(uidAssociacao) // üìÑ Documento do utilizador
          .collection("socio") // üìÇ Subcole√ß√£o espec√≠fica
          .add({
        "nomeCompleto": nomeController.text,
        "morada": moradaController.text,
        "codigoPostal": codigoPostalController.text,
        "localidade": localidadeController.text,
        "email": emailController.text,
        "telemovel": telemovelController.text,
        "nif": nifController.text,
        "quota": selectedQuota,
        "status": "pendente", // Inscri√ß√£o come√ßa como "pendente"
        "dataCriacao": FieldValue.serverTimestamp(), // Timestamp autom√°tico
      });

      // Mensagem de sucesso
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Inscri√ß√£o submetida com sucesso! ‚úÖ")),
      );

    } catch (e) {
      print("Erro ao submeter inscri√ß√£o: $e");
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Erro ao submeter inscri√ß√£o! ‚ùå")),
      );
    }
  }

  /// Popup de confirma√ß√£o ap√≥s submiss√£o
  void _mostrarPopupConfirmacao() {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text("üéâ Inscri√ß√£o Confirmada!"),
          content: Text("Obrigado por se tornar s√≥cio! Em breve, entraremos em contacto."),
          actions: [
            TextButton(
              child: Text("Fechar"),
              onPressed: () => Navigator.pop(context),
            ),
          ],
        );
      },
    );
  }

  TextStyle _titleStyle() => TextStyle(fontSize: 18, fontWeight: FontWeight.bold);
}
